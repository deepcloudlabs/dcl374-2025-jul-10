spring.application.name=hr

#rest api url
server.address=localhost
server.port=3300
server.servlet.context-path=/hr
spring.mvc.servlet.path=/api/v1
#http://localhost:3300/hr/api/v1/swagger-ui/index.html

persistenceStrategy=mongodb

#spring data jpa configuration
spring.datasource.url=jdbc:mysql://localhost:3306/hrdb?useSSL=false
spring.datasource.username=root
spring.datasource.password=Secret_123

#mongodb configuration
spring.data.mongodb.uri=mongodb://localhost:27017/hrdb

messagingStrategy=kafka

#kafka configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
topicName=hr-events

#rabbitmq configurtation
exchangeName=hrex
spring.rabbitmq.host=localhost
spring.rabbitmq.username=demoadmin
spring.rabbitmq.password=secret123

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/aselsan

#hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

springdoc.show-actuator=true
management.endpoints.web.exposure.include=*

#curl -X POST "http://localhost:8080/realms/aselsan/protocol/openid-connect/token" -H "Content-Type: application/x-www-form-urlencoded" -d "client_id=aselsan-client" -d "username=jack" -d "password=secret123" -d "grant_type=password"
#curl -X GET "http://localhost:3300/hr/api/v1/employees/11111111110" -H "Authorization: Bearer <token>"